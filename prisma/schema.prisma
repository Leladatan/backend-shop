generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UsersRoles {
  ADMIN
  USER
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  username String @unique
  password String

  vendor Vendor?
  role   UsersRoles @default(USER)
  token  Token?

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  @@index([id])
  @@index([email])
  @@index([username])
}

model Token {
  id           Int    @id @default(autoincrement())
  accessToken  String
  refreshToken String

  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  @@index([id])
  @@index([userId])
}

model Category {
  id          Int    @id @default(autoincrement())
  name        String @unique @db.VarChar(36)
  description String @db.VarChar(256)

  products Product[] @relation(name: "CategoryToProduct")

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  @@index([id])
  @@index([name])
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(256)
  description String  @db.VarChar(256)
  price       Int
  count       Int
  isStock     Boolean
  stock       Int

  categories Category[] @relation(name: "CategoryToProduct")
  vendors    Vendor[]   @relation(name: "VendorToProduct")

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  @@index([id])
}

model Vendor {
  id                  Int    @id @default(autoincrement())
  name                String
  INN                 String @unique
  OGRNIP              String @unique
  registration_number String

  userId   Int       @unique
  user     User?     @relation(fields: [userId], references: [id])
  products Product[] @relation(name: "VendorToProduct")

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  @@index([id])
  @@index([name])
  @@index([userId])
}
